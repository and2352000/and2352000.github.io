<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nodejs on Aaron's Blog</title><link>https://and2352000.github.io/tags/nodejs/</link><description>Recent content in Nodejs on Aaron's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 26 Feb 2024 15:07:57 +0800</lastBuildDate><atom:link href="https://and2352000.github.io/tags/nodejs/index.xml" rel="self" type="application/rss+xml"/><item><title>Manage Nodejs Heap in Docker</title><link>https://and2352000.github.io/posts/7-manage-nodejs-heap-in-docker/</link><pubDate>Mon, 26 Feb 2024 15:07:57 +0800</pubDate><guid>https://and2352000.github.io/posts/7-manage-nodejs-heap-in-docker/</guid><description>Container 記憶體調整 🔗在 local 調整 container 記憶體如下
docker run --memory 1024m --interactive --tty ravali1906/dockermemory bash 但是這樣會有一個問題，有由於 container default 有 swap，所以即便用超過也不會Out of memory
這段程式碼程式碼會 allocate 1024MB
const buf = Buffer.alloc(+process.argv[2] * 1024 * 1024) console.log(Math.round(buf.length / (1024 * 1024))) console.log(Math.round(process.memoryUsage().rss / (1024 * 1024))) 執行結果
$ node buffer_example 2000 2000 16 以上這段程式碼是參考 ref1 其實是有問題的 Buffer.alloc 並不會用使用到 heap
我有重新實作但是還不完整&amp;hellip;..
memoryUsage 有四個資訊 heapTotal and heapUsed refer to V8&amp;rsquo;s memory usage. external refers to the memory usage of C++ objects bound to JavaScript objects managed by V8.</description></item></channel></rss>